@*@model AirlineTickectBookingMVCProject.Models.PassangerModel



    @{
        ViewBag.Title = "Create";
    }

    <link href="~/Content/StyleSheet1.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="total">
            <div class="form-horizontal">
                <h4 class="h">PassangerModel</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="position">
                    @Html.EditorFor(model => model.Passangercount, new { htmlAttributes = new { @class = "txt", @placeholder = "Enter number of Passengers" } })
                    @Html.ValidationMessageFor(model => model.Passangercount, "", new { @class = "text-danger" })
                    <br />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add" class="button" />
                </div>
            </div>

        </div>

    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

@model AirlineTickectBookingMVCProject.Models.PassangerModel



@{
    ViewBag.Title = "Create";

}
<head>
    <title>
        BREEZE Airways passenger count
    </title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <script src="~/Content/jQuery.js"></script>
    <style>
        .headReConfirmation {
            font-size: 30px;
            padding: 20px;
            text-shadow: 2px 2px lightgrey;
            color: black;
        }

        .total {
            width: 900px;
            height: 900px;
        }
        .txt{
            width:200px;
        }
    </style>
</head>
<link href="~/Content/StyleSheet1.css" rel="stylesheet" />
<link href="~/Content/bootstrap.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="total">
        <div class="form-horizontal">
            <h1 class="headReConfirmation">Huh! we wanna make sure of the count...</h1>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="position">
                @Html.EditorFor(model => model.Passangercount, new { htmlAttributes = new { @class = "txt", @placeholder = "Count", id = "editorid" } })
                @Html.ValidationMessageFor(model => model.Passangercount, "", new { @class = "text-danger" })
                <br />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="button" />
            </div>
        </div>
    </div>
    @*@for (int i = 0; i < Model.Passangercount; i++)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Pa_name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pa_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pa_name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Ps_age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ps_age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ps_age, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @ViewBag.message
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Proof, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Proof, Model.Proofs)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        }*@
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}